# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master



variables:

    # Azure Resource Manager connection created during pipeline creation
    azureSubscription: '12e21815-c94f-49a2-a4ba-51b1a0c0d3fa'
    # Web app name
    webAppName: 'txdotnet'
    # Environment name
    environmentName: 'txdotnet'

    vmImage: 'ubuntu-latest'

    solution: '**/*.sln'
    buildPlatform: 'Any CPU'
    buildConfiguration: 'Release'


stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImage)

    steps:
      - task: NuGetToolInstaller@1

      - task: NuGetCommand@2
        inputs:
         restoreSolution: '$(solution)'

      - task: DotNetCoreCLI@2
        displayName: Restore
        inputs:
          command: restore
          projects: '$(Parameters.RestoreBuildProjects)'
          
      - task: DotNetCoreCLI@2
        displayName: Build
        inputs:
          projects: '$(Parameters.RestoreBuildProjects)'
          arguments: '--configuration $(BuildConfiguration)'
          
      - task: DotNetCoreCLI@2
        displayName: Publish
        inputs:
          command: publish
          publishWebProjects: True
          arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
          zipAfterPublish: True

          
          

      - task: ArchiveFiles@2
        inputs:
            rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
            includeRootFolder: true
            archiveType: 'zip'
            archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildID).zip'
            replaceExistingArchive: true

      - task: PublishBuildArtifacts@1
        inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'drop'
            publishLocation: 'Container'



- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
      - deployment: Deploy
        displayName: Deploy
        environment: $(environmentName)
        pool:
          vmImage: $(vmImage)
        strategy:
          runOnce:
            deploy:
              steps:
                 - task: AzureWebApp@1
                   inputs:
                    azureSubscription: 'Visual Studio Enterprise â€“ MPN (da791a4e-3933-4213-a43e-f94f3e2187c3)'
                    appType: 'webAppLinux'
                    appName: 'txdotnet'
                    package: '$(System.DefaultWorkingDirectory)/**/*.zip'
                    runtimeStack: 'DOTNETCORE|3.1'
                    startUpCommand: 'dotnet run start'
                              



